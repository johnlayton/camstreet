<!DOCTYPE html>
<html>
    <head>
        <title><%= title %></title>

        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

        <link rel="stylesheet" href="<%= leaflet %>/dist/leaflet.css" />
        <link rel="stylesheet" href="<%= draw %>/dist/leaflet.draw.css" />
        <link rel="stylesheet" href="<%= cam %>/dist/camstreet.draw.css" />

        <!--[if lte IE 8]>
        <link rel="stylesheet" href="<%= leaflet %>/dist/leaflet.ie.css" />
        <link rel="stylesheet" href="<%= draw %>/dist/leaflet.draw.ie.css" />
        <link rel="stylesheet" href="<%= cam %>/dist/camstreet.draw.ie.css" />
        <![endif]-->

        <script src="<%= leaflet %>/dist/leaflet-src.js"></script>
        <!--<script src="<%= draw %>/dist/leaflet.draw-src.js"></script>-->

        <script src="<%= draw %>/src/ext/LineUtil.Intersect.js"></script>
        <script src="<%= draw %>/src/ext/Polygon.Intersect.js"></script>
        <script src="<%= draw %>/src/ext/Polyline.Intersect.js"></script>

        <script src="<%= draw %>/src/Control.Toolbar.js"></script>
        <script src="<%= draw %>/src/Tooltip.js"></script>

        <script src="<%= draw %>/src/draw/Control.Draw.js"></script>
        <script src="<%= draw %>/src/draw/handler/Draw.Feature.js"></script>
        <script src="<%= draw %>/src/draw/handler/Draw.SimpleShape.js"></script>
        <script src="<%= draw %>/src/draw/handler/Draw.Polyline.js"></script>
        <script src="<%= draw %>/src/draw/handler/Draw.Polygon.js"></script>
        <script src="<%= draw %>/src/draw/handler/Draw.Rectangle.js"></script>
        <script src="<%= draw %>/src/draw/handler/Draw.Circle.js"></script>
        <script src="<%= draw %>/src/draw/handler/Draw.Marker.js"></script>

        <script src="<%= draw %>/src/edit/Control.Edit.js"></script>
        <script src="<%= draw %>/src/edit/handler/Edit.Feature.js"></script>
        <script src="<%= draw %>/src/edit/handler/Edit.SimpleShape.js"></script>
        <!--<script src="<%= draw %>/src/edit/handler/Edit.Polyline.js"></script>-->
        <script src="<%= draw %>/src/edit/handler/Edit.Circle.js"></script>
        <script src="<%= draw %>/src/edit/handler/Edit.Rectangle.js"></script>
        <script src="<%= draw %>/src/edit/handler/Delete.Feature.js"></script>


    </head>
    
    <body>

        <div id="map" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></div>

        <script src="/browserify.js"></script>
        <script>
            var util     = require('util');
            var traverse = require('traverse');
            var d3       = require('d3');
            var _        = require('underscore');
            var $        = require('jquery-browserify');
            var io       = require('socket.io-browserify');

            var map = L.map('map').setView([51.505, -0.09], 13);
            L.tileLayer('http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/997/256/{z}/{x}/{y}.png', { maxZoom: 18 }).addTo(map);
//            L.tileLayer('http://{s}.tile.stamen.com/toner-hybrid/{z}/{x}/{y}.png', {attribution: 'Stamen'}).addTo(map);

            var drawnItems = new L.FeatureGroup();

            var socket = io.connect('<%= host %>', {});
            socket.on('connect', function () {

//              var geolayer = L.geoJson().addTo(map);
//              drawnItems.addLayer(geolayer);

              socket.on('update', function( json ) {
                console.log( json );
                  var feature = L.geoJson(json, {
                      style: {
                          "color": "#FF3333",
                          "weight": 2,
                          "opacity": 0.65
                      }
                  });
//                  geolayer.addData(json);
//                  drawnItems.addLayer(feature);
                  feature.addTo(map);
                  if ( json.features ) {
                      map.setView( [ json.features[0].geometry.coordinates[0][1],
                                     json.features[0].geometry.coordinates[0][0] ], 13 );
                  }
              });
              setInterval(function() {
                  navigator.geolocation.getCurrentPosition(
                    function( pos ) {
                      socket.emit( "update", pos.coords );
                    },
                    function( err ) {
                      console.log( err );
                    }
                  );
              }, 5000);
            });

            var polygon = function( type, properties, leaflet_object ) {
                var temp_coords = _.map(leaflet_object.getLatLngs(), function(value) {
                    return [value.lng, value.lat];
                });
                json = {
                    "type": "Feature",
                    "id": 1234,
                    "properties": properties,
                    "geometry": {
                        "type": type,
                        "coordinates": [temp_coords]
                    }
                };
                return json;
            };

            var polyline = function( type, properties, leaflet_object ) {
                var temp_coords = _.map(leaflet_object.getLatLngs(), function(value) {
                    return [value.lng, value.lat];
                });
                json = {
                    "type": "Feature",
                    "id": 1234,
                    "properties": properties,
                    "geometry": {
                        "type": type,
                        "coordinates": temp_coords
                    }
                };
                return json;
            };

            var point = function( marker ) {
                return {
                    type: "Feature",
                    id: 1234,
                    properties: {},
                    geometry: {
                        type: "Point",
                        coordinates: [
                            marker.getLatLng().lng,
                            marker.getLatLng().lat
                        ]
                    }
                };
            }
            var shapes = [
                {
                    name: 'polygon',
                    type: 'polygon',
                    allowIntersection: false,
                    drawError: {
                        color: '#b00b00',
                        timeout: 1000
                    },
                    shapeOptions: {
                        color: '#bada55'
                    }
                },
                {
                    name: 'polyline',
                    type: 'polyline'
                },
                {
                    name: 'circle',
                    type: 'circle',
                    shapeOptions: {
                        color: '#662d91'
                    }
                },
                {
                    name: 'rectangle',
                    type: 'rectangle',
                    editable: true,
                    shapeOptions: {
                        color: '#660000'
                    }
                },
                {
                    name: 'tree',
                    type: 'marker',
                    style: 'tree',
                    title: 'Damaged Tree'
                },
                {
                    name: 'bridge',
                    type: 'marker',
                    style: 'bridge',
                    title: 'Damaged Bridge'
                }
            ];

            var drawControl = new L.Control.Draw({
                shapes: shapes,
                position: 'topleft'
            });
            map.addControl(drawControl);


            map.on('draw:polygon-created', function (e) {
                drawnItems.addLayer(e.poly);
                socket.emit("add", polygon( "Polygon", {}, e.poly ) )
            });
            map.on('draw:polyline-created', function (e) {
                drawnItems.addLayer(e.poly);
                socket.emit("add", polyline( "LineString", {}, e.poly ) )
            });
            map.on('draw:rectangle-created', function (e) {
                drawnItems.addLayer(e.rect);
                socket.emit("add", polygon( "Polygon", {}, e.rect ) )
            });
            map.on('draw:circle-created', function (e) {
                drawnItems.addLayer(e.circ);
            });
            map.on('draw:marker-created', function (e) {
                drawnItems.addLayer(e.marker);
                socket.emit("add", point( e.marker ) )
            });
            map.addLayer(drawnItems);

            var editControl = new L.Control.Edit({
                featureGroup: drawnItems
            });

            map.addControl(editControl);

        </script>
    </body>
</html>