<!DOCTYPE html>
<html>
<head>
  <title><%= title %></title>

  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>

  <link rel="stylesheet" href="/dist/leaflet.css"/>

  <!--[if lte IE 8]>
  <link rel="stylesheet" href="/dist/leaflet.ie.css"/>
  <![endif]-->

  <script src="/dist/leaflet-src.js"></script>
  <script src="/dist/leaflet-hash.js"></script>

  <% if ( agent.indexOf( 'Mobile' ) > 0 ) {%>
  <script src="/dist/cordova-2.3.0.js"></script>
  <% } else { %>
  <% } %>
</head>
<body>
  <div id="map" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></div>
  <!--<script src="/dist/bundle.js"></script>-->
  <script src="/browserify"></script>
  <script>
    var b = require( 'branding' );
    var _ = require( 'underscore' );
    var u = require( 'util' );
    var $ = require( 'jquery' );
    var i = require( 'socket.io' );
  </script>
  <script>
    var a = "http://emap.dse.vic.gov.au/ArcGIS/rest/services/mapscape/MapServer/tile";
    var b = "http://devgeocortex01.fire.dse.vic.gov.au/ArcGIS/rest/services/mapscape/MapServer/tile";
    var c = "http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/";

    var f = '/{z}/{x}/{y}.png';
    var g = '/{z}/{y}/{x}.png';

    var map = L.map( 'map', { attributionControl: false } ).setView( [-37.8, 144.9], 7 );

    var underlays = {
      "arcgis": L.tileLayer( c + g, { maxZoom: 18 } ).addTo( map )
    };

    var overlays = {
      "drawing": L.featureGroup().addTo( map )
    };

    L.control.layers( underlays, overlays ).addTo( map );
    L.hash( map );

    var view = i.connect( "http://" + document.location.hostname + "/view", { transports: ['websocket'] } );
    view.on( 'update', function ( data ) {
      moving = true;
      map.setView( [ data.latitude, data.longitude ], data.zoom )
      moving = false;
    } );
    view.on( 'connect', function () {
      moving = false;
      map.on( "moveend", function ( themap ) {
        var center = themap.target.getCenter(),
            zoom = themap.target.getZoom(),
            precision = Math.max( 0, Math.ceil( Math.log( zoom ) / Math.LN2 ) );
        if ( !moving ) {
          view.emit( 'update', {
            zoom: zoom,
            latitude: center.lat.toFixed( precision ),
            longitude: center.lng.toFixed( precision )
          } );
        }
      }, this );
    } );
  </script>
</body>
</html>
